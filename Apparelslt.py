# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Apparelslt.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtWidgets import  QFileDialog
from PyQt5 import QtCore, QtGui, QtWidgets

from com_ineuron_firensmoke.predictor_yolo_detector.detector_test import Detector
import shutil

class ClientApp:
    def __init__(self):
        self.filename = "inputImage.jpg"
        self.objectDetection = Detector(self.filename)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Photo = QtWidgets.QLabel(self.centralwidget)
        self.Photo.setGeometry(QtCore.QRect(10, 60, 601, 391))
        self.Photo.setText("")
        self.Photo.setPixmap(QtGui.QPixmap("../../Internship/Apparel_Detection/inputImage.jpg"))
        self.Photo.setScaledContents(True)
        self.Photo.setObjectName("Photo")
        self.Upload = QtWidgets.QPushButton(self.centralwidget)
        self.Upload.setGeometry(QtCore.QRect(70, 490, 181, 51))
        self.Upload.setObjectName("Upload")
        self.Predict = QtWidgets.QPushButton(self.centralwidget)
        self.Predict.setGeometry(QtCore.QRect(390, 490, 161, 51))
        self.Predict.setObjectName("Predict")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(180, 10, 381, 41))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(650, 120, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(650, 170, 131, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(650, 210, 131, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(650, 260, 121, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(650, 320, 111, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.Upload.clicked.connect(self.get_image_file)
        self.Predict.clicked.connect(self.show_predict)


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.Upload.setText(_translate("MainWindow", "Upload"))
        self.Upload.setShortcut(_translate("MainWindow", "Ctrl+U"))
        self.Predict.setText(_translate("MainWindow", "Predict"))
        self.Predict.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.label.setText(_translate("MainWindow", "iNeuron Apparels Detection"))
        self.label_2.setText(_translate("MainWindow", "Hat"))
        self.label_3.setText(_translate("MainWindow", "Vest"))
        self.label_4.setText(_translate("MainWindow", "Goggles"))
        self.label_5.setText(_translate("MainWindow", "Glove"))
        self.label_6.setText(_translate("MainWindow", "Shoe"))


    def get_image_file(self):
        file_name, _ = QFileDialog.getOpenFileName(None, 'Open Image File', r"<Default dir>",
                                                   "Image files (*.jpg *.jpeg *.gif)")
        print("filepath"+file_name)
        dest ='./com_ineuron_firensmoke/predictor_yolo_detector/inference/images/inputImage.jpg'
        shutil.copyfile(file_name, dest)
        self.Photo.setPixmap(QtGui.QPixmap(file_name))

    def show_predict(self):
         result = clApp.objectDetection.detect_action()
         mydisplaylist =clApp.objectDetection.my_list
         self.label_2.setText("".join([name for name in mydisplaylist if name.startswith(('hats'))]))
         self.label_3.setText("".join([name for name in mydisplaylist if name.startswith(('vests'))]))
         self.label_4.setText("".join([name for name in mydisplaylist if name.startswith(('goggles'))]))
         self.label_5.setText("".join([name for name in mydisplaylist if name.startswith(('glove'))]))
         self.label_6.setText("".join([name for name in mydisplaylist if name.startswith(('shove'))]))
         output = result[0]['image']
         self.Photo.setPixmap(QtGui.QPixmap("output.JPG"))

clApp = ClientApp()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
